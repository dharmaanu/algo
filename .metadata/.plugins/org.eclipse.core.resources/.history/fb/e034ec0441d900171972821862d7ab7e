Feature:  Receive Payment Mutation with invoice deposit

 @priority=p0 @entity=transaction @domain=transaction @type=receivepayment @region=US @testId=transaction-transaction-receivePayment-10008
   Scenario: Invoice deposit offsets the payment amount in Receive payment
    * call read('classpath:qbo-setup.feature') {companyCriteria:'{ "regionName":"US", "sku": "PLUS", "defaultEntityCreation": ["CUSTOMER","ACCOUNT","ITEMS"] }'}
    
   # create invoice
    * set session.runtimeData.type = 'SALE_INVOICE'
    * set session.runtimeData.date = session.default.today
    * set session.runtimeData.amount = "10.00"
    * set session.runtimeData.rate = session.runtimeData.amount
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../../../shared/input/transactions/create-without-account.json' }  
    
    # receive payment against invoice
    # paymentmethodId is <1> <2> <3>... for Cash, check, credit card and so on. To get payment method Id, navigate to All lists > Payment Methods
    * set session.runtimeData.paymentMethodId = "1"
    * set session.runtimeData.amount = "10.00"
    * set session.runtimeData.type = 'SALE_INVOICE_PAYMENT'
    * set session.runtimeData.sourceType = 'CHARGE'
    * set session.runtimeData.customerId = session.default.contact.customer.id
    * set session.runtimeData.sourceTxn = session.runtimeData.transactions-create-all-fields.data.createTransactions_Transaction.transactionsTransactionEdge.node.id
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../../../shared/input/transactions/create-with-paymentMethod-sourceTxn.json' }
    
    # read by id
    * set session.runtimeData.invoiceId = session.runtimeData.sourceTxn
    * set session.runtimeData.paymentId = session.runtimeData.create-transaction-paymentMethod-sourceTxn.data.createTransactions_Transaction.transactionsTransactionEdge.node.id
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/read.graphql', inputFile: '../input/sale-invoice-read-after-update.json' }
    
    # update invoice with deposit
    * set session.runtimeData.depositAmount = "3.00"
    * set session.runtimeData.balanceAmount = "7.00"
    * set session.runtimeData.type = 'SALE_INVOICE'
    # Expected entityVersion is two because invoice was first updated with payment then with deposit
    * set session.runtimeData.entityVersion = "2"
    * set session.runtimeData.id = session.runtimeData.sourceTxn
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/update.graphql', inputFile: '../../../shared/input/transactions/update-depositAmount.json' }
    
    # Read payment
    * set session.runtimeData.id = session.runtimeData.paymentId 
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../query/payment-read-sourceTxn.graphql', inputFile: '../../../shared/input/transactions/read-after-deposit' }
