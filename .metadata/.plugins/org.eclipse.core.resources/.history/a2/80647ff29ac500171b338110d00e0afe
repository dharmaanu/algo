Feature: Delete an invoice linked to a payment

  @priority=p1 @entity=transaction @domain=transaction @type=receivepayment @region=US @testId=transaction-transaction-receivePayment-10012
  Scenario: Delete an invoice linked to a payment
    * call read('classpath:qbo-setup.feature') {companyCriteria:'{ "regionName":"US", "sku": "PLUS", "defaultEntityCreation":["CUSTOMER","ACCOUNT","ITEMS"] }'}
    
    # create invoice 
    * set session.runtimeData.amount = "10.00"
    * set session.runtimeData.rate = "2.00"
    * set session.runtimeData.date = session.default.today
    * set session.runtimeData.contactId = session.default.contact.customer.id
    * set session.runtimeData.type = 'SALE_INVOICE'
    * set session.runtimeData.quantity = "5"
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../../../shared/input/transactions/create-without-account.json' }
    
    # receive payment against invoice
    * set session.runtimeData.type = 'SALE_INVOICE_PAYMENT'   
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../../../shared/input/transactions/create-with-account.json' }
    
    # delete
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../../../shared/input/transactions/delete.json' }
    
    # read after delete
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/read.graphql', inputFile: '../../../shared/input/transactions/read-after-delete.json' }
    
  @priority=p1 @entity=transaction @domain=transaction @type=receivepayment @region=US @testId=transaction-transaction-receivePayment-10011
  Scenario: Delete a payment linked to invoice and credit memo
    * call read('classpath:qbo-setup.feature') {companyCriteria:'{ "regionName":"US", "sku": "PLUS", "defaultEntityCreation": ["CUSTOMER","ACCOUNT","ITEMS"] }'}
    # create invoice
    * set session.runtimeData.invoiceAmount = "1010.00"
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../input/sale-invoice-mutation.json' }
        
    # create
    * set session.runtimeData.type = 'SALE_CREDIT'
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../input/sale-credit-memo-mutation.json' }
    
    # receive payment against invoice
    * set session.runtimeData.paymentAmount = "10.00"  
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../input/sale-invoice-payment-mutation.json' }
    
    # delete
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/create.graphql', inputFile: '../input/sale-invoice-delete-with-payment.json' }
    
    # read after delete
    * def result = call read('classpath:declarative-graphql-test.feature') { queryFile: '../../../shared/query/transactions/read.graphql', inputFile: '../input/sale-invoice-read-after-delete.json' }